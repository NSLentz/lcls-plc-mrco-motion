<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="Main" Id="{3f08c9da-acd6-4059-bcf8-867945acb3ea}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Main
VAR
    // Motors
    // MRCO Axes
    {attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasNozzleX-EL7047]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[GasNozzleX-EL7047]^STM Status^Status^Digital input 2';
                              .nRawEncoderULINT     := TIIB[Enc_GasNozzleX_Y-EL5042]^FB Inputs Channel 1^Position'}
    {attribute 'pytmc' := '
        pv: TMO:MRCO:MMS:01
    '}
    M1 : DUT_MotionStage; // Gas Nozzle X

    {attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasNozzleY-EL7047]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable:=TIIB[GasNozzleY-EL7047]^STM Status^Status^Digital input 1';
                              .nRawEncoderULINT     := TIIB[Enc_GasNozzleX_Y-EL5042]^FB Inputs Channel 2^Position'}
    {attribute 'pytmc' := '
        pv: TMO:MRCO:MMS:02
    '}
    M2 : DUT_MotionStage; // Gas Nozzle Y

    {attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[GasNozzleZ-EL7047]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable:=TIIB[GasNozzleZ-EL7047]^STM Status^Status^Digital input 1';
                              .nRawEncoderULINT     := TIIB[Enc_GasNozzleZ_SamplePaddleX-EL5042]^FB Inputs Channel 1^Position'}
    {attribute 'pytmc' := '
        pv: TMO:MRCO:MMS:03
    '}
    M3 : DUT_MotionStage; // Gas Nozzle Z

    {attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[SamplePaddleX-EL7047]^STM Status^Status^Digital input 2;
                              .bLimitBackwardEnable:=TIIB[SamplePaddleX-EL7047]^STM Status^Status^Digital input 1';
                              .nRawEncoderULINT     := TIIB[Enc_GasNozzleZ_SamplePaddleX-EL5042]^FB Inputs Channel 2^Position'}
    {attribute 'pytmc' := '
        pv: TMO:MRCO:MMS:04
    '}
    M4 : DUT_MotionStage; // Sample Paddle X

    {attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[SamplePaddleY-EL7047]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[SamplePaddleY-EL7047]^STM Status^Status^Digital input 2';
                              .nRawEncoderULINT     := TIIB[Enc_SamplePaddleY_Z-EL5042]^FB Inputs Channel 1^Position'}
    {attribute 'pytmc' := '
        pv: TMO:MRCO:MMS:05
    '}
    M5 : DUT_MotionStage; // Sample Paddle Y

    {attribute 'TcLinkTo' := '.bLimitForwardEnable:=TIIB[SamplePaddleZ-EL7047]^STM Status^Status^Digital input 1;
                              .bLimitBackwardEnable:=TIIB[SamplePaddleZ-EL7047]^STM Status^Status^Digital input 2';
                              .nRawEncoderULINT     := TIIB[Enc_SamplePaddleY_Z-EL5042]^FB Inputs Channel 2^Position'}
    {attribute 'pytmc' := '
        pv: TMO:MRCO:MMS:06
    '}
    M6 : DUT_MotionStage; // Sample Paddle Z

    // MRCO Axes
    fbMotionStageM1 : FB_MotionStage;
    fbMotionStageM2 : FB_MotionStage;
    fbMotionStageM3 : FB_MotionStage;
    fbMotionStageM4 : FB_MotionStage;
    fbMotionStageM5 : FB_MotionStage;
    fbMotionStageM6 : FB_MotionStage;

    bInit : BOOL := TRUE;

    // The desired position in new coordinate system.
    x: LREAL := 0;
    y: LREAL := 0;
    z: LREAL := 0;
    // The angle between stMotionStage1 and the new axis 1. In Degrees.
    aDeg: LREAL := 0;
    // The angle between stMotionStage2 and the new axis 2. In Degrees.
    bDeg:  LREAL := 0;
    // The angle between stMotionStage3 and the new axis 3. In Degrees.
    gDeg: LREAL := 0;
    fbCoordinateTransform3D: FB_CoordinateTransform3D;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF bInit THEN
    M1.bHardwareEnable := TRUE;
    M1.bPowerSelf := TRUE;
    M1.nBrakeMode := E_StageBrakeMode.NO_BRAKE;
    M1.nEnableMode := E_StageEnableMode.DURING_MOTION;

    M2.bHardwareEnable := TRUE;
    M2.bPowerSelf := TRUE;
    M2.nBrakeMode := E_StageBrakeMode.NO_BRAKE;
    M2.nEnableMode := E_StageEnableMode.DURING_MOTION;

    M3.bHardwareEnable := TRUE;
    M3.bPowerSelf := TRUE;
    M3.nBrakeMode := E_StageBrakeMode.NO_BRAKE;
    M3.nEnableMode := E_StageEnableMode.DURING_MOTION;

    M4.bHardwareEnable := TRUE;
    M4.bPowerSelf := TRUE;
    M4.nBrakeMode := E_StageBrakeMode.NO_BRAKE;
    M4.nEnableMode := E_StageEnableMode.DURING_MOTION;

    M5.bHardwareEnable := TRUE;
    M5.bPowerSelf := TRUE;
    M5.nBrakeMode := E_StageBrakeMode.NO_BRAKE;
    M5.nEnableMode := E_StageEnableMode.DURING_MOTION;

    M6.bHardwareEnable := TRUE;
    M6.bPowerSelf := TRUE;
    M6.nBrakeMode := E_StageBrakeMode.NO_BRAKE;
    M6.nEnableMode := E_StageEnableMode.DURING_MOTION;
END_IF

// Mrco

// Transform Coordinates to new coordinate system before calling fbMotion so that it knows where to move to move to the new coordinates.
fbCoordinateTransform3D(
    stMotionStageMx:=M4,
    stMotionStageMy:=M5,
    stMotionStageMz:=M6,
    x:=x,
    y:=y,
    z:=z,
    aDeg:=aDeg,
    bDeg:=bDeg,
    gDeg:=gDeg
);

// Gas Nozzle
fbMotionStageM1(stMotionStage:=M1);
fbMotionStageM2(stMotionStage:=M2);
fbMotionStageM3(stMotionStage:=M3);

// Sample Paddle
fbMotionStageM4(stMotionStage:=M4);
fbMotionStageM5(stMotionStage:=M5);
fbMotionStageM6(stMotionStage:=M6);
    ]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>